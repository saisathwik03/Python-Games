# -*- coding: utf-8 -*-
"""Scrabble.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U5y-4wiylFAvhRfk7JBDcwGVQHH2SHqJ
"""

SCRABBLE_LETTER_VALUES = {
    'a': 1, 'b': 3, 'c': 3, 'd': 2, 'e': 1, 'f': 4, 'g': 2, 'h': 4, 'i': 1,
    'j': 8, 'k': 5, 'l': 1, 'm': 3, 'n': 1, 'o': 1, 'p': 3, 'q': 10, 'r': 1,
    's': 1, 't': 1, 'u': 1, 'v': 4, 'w': 4, 'x': 8, 'y': 4, 'z': 10
}

import random

def get_word_score(word, n):
    """
    Calculates and returns the score of the word.
    If the length of the word is equal to n, adds a bonus of 50 points.
    """
    scores = []
    word_lower = word.lower()
    for letter in word_lower:
        if letter in SCRABBLE_LETTER_VALUES:
            scores.append(SCRABBLE_LETTER_VALUES[letter])
    score = sum(scores) * len(word)
    if len(word) == n:
        score += 50
    return score

def get_frequency_dict(word):
    """
    Returns a dictionary containing the frequency of each letter in the word.
    """
    word_lower = word.lower()
    letter_count = {}
    for letter in word_lower:
        if letter not in letter_count:
            letter_count[letter] = 1
        else:
            letter_count[letter] += 1
    return letter_count

def is_valid_word(word, hand, wordlist):
    """
    Checks if the word is valid based on the letters available in the hand and the wordlist.

    Parameters:
    - word (str): The word to be checked for validity.
    - hand (dict): A dictionary representing the letters available in the current hand.
    - wordlist (list): A list of valid words.

    Returns:
    - bool: True if the word is valid, False otherwise.
    """
    # Create a copy of the hand to avoid modifying the original hand
    hand_copy = hand.copy()

    # Check if each letter in the word is in the hand and has a non-zero count
    for letter in word:
        if letter not in hand_copy or hand_copy[letter] == 0:
            return False
        else:
            hand_copy[letter] -= 1  # Decrement the count of the used letter

    # Check if the word is in the wordlist
    if word in wordlist:
        return True

    return False

def calculate_hand_len(hand):
    """
    Calculates and returns the total number of letters in the hand.
    """
    return sum(hand.values())

def update_hand(hand, word):
    """
    Updates the hand by removing letters used in the word.
    """
    updated_hand = hand.copy()
    for letter in word:
        if letter in updated_hand:
            updated_hand[letter] -= 1
    return {k: v for k, v in updated_hand.items() if v > 0}

def play_hand(hand, wordlist, n):
    """
    Allows the player to play a hand with the given hand and wordlist.
    """
    current_hand = "".join([letter * count for letter, count in hand.items()])
    print("Current hand:", current_hand)
    score = 0

    while len(current_hand) > 0:
        word = input("Enter a word, or a '.' to indicate that you are finished: ")

        if is_valid_word(word, hand, wordlist):
            word_score = get_word_score(word, n)
            score += word_score
            print(f"{word} earned {word_score} points. Total: {score} points")
            current_hand = "".join([letter * count for letter, count in update_hand(hand, word).items()])
            print("Current hand:", current_hand)
        else:
            print("Invalid word")

        if word == '.':
            final_word_score = get_word_score(word, n)
            print(f"Goodbye! Total score: {score + final_word_score} points")
            break

def play_game(wordlist):
    s = "bcdfghjklmnpqrstvwxyz"
    vowels = ['a', 'e', 'i', 'o', 'u']
    consonants = list(s)
    count = 0
    replay_hand = None

    while True:
        letter = input("Enter 'n' to deal a new hand, 'r' to replay the last hand, or 'e' to end the game: ")

        if letter == 'r' and count == 0:
            print("You have not played a hand yet. Please play a new hand")
            count += 1
        elif letter == 'r' and count >= 1:
            play_hand(replay_hand, wordlist, n)
        elif letter == 'n':
            n = int(input("Enter the word length: "))
            vowels_count = n // 3
            consonants_count = n - vowels_count
            s1 = ''.join([random.choice(vowels) for _ in range(vowels_count)])
            s1 += ''.join([random.choice(consonants) for _ in range(consonants_count)])
            count += 1
            replay_hand = get_frequency_dict(s1)
            play_hand(replay_hand, wordlist, n)
        elif letter == 'e':
            print("Game completed")
            break

wordlist = open("C:/Users/SATHWIK/Downloads/words-dict.txt").read()
wordlist = wordlist.split()
wordlist = [word.lower() for word in wordlist]
play_game(wordlist)

